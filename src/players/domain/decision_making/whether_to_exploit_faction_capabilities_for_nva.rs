use board::domain::board::Board;
use cards::domain::card::Cards;
use game_definitions::factions::Factions;
use players::domain::decision::Decision;
use players::domain::does_card_have_a_factions_capability::does_card_have_a_factions_capability;
use players::domain::does_card_have_a_factions_capability_and_of_a_specific_one::does_card_have_a_factions_capability_and_of_a_specific_one;
use players::domain::does_card_have_a_factions_capability_but_not_of_a_specific_one::does_card_have_a_factions_capability_but_not_of_a_specific_one;
use randomization::controllers::randomization_controller_trait::RandomizationControllerTrait;
use randomization::controllers::randomization_controller_trait::RandomizationControllers;

pub fn whether_to_exploit_faction_capabilities_for_nva(
    active_card: &Cards,
    preview_card: &Cards,
    board: &Board,
    randomization_controller: &RandomizationControllers,
) -> Result<Option<Decision>, String> {
    if does_card_have_a_factions_capability_but_not_of_a_specific_one(&active_card, &Factions::NVA)?
        && does_card_have_a_factions_capability_and_of_a_specific_one(
            &preview_card,
            &Factions::NVA,
        )?
    {
        // The next faction has NVA capabilities.

        if randomization_controller.roll_six_sided_die()? > board.get_number_of_arvn_leaders()? {
            panic!("Die throw was bigger than number of ARVN leaders in box. Not implemented.");
        } else {
            panic!("Not implemented.");
        }
    } else if does_card_have_a_factions_capability(&active_card)?
        && randomization_controller.roll_six_sided_die()? > board.get_number_of_arvn_leaders()?
    {
        // Play the capability
        panic!("The active card has any faction's capability and 1d6 is higher than the number of arvn leaders");
    }

    Ok(None)
}
